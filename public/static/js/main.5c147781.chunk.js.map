{"version":3,"sources":["data.service.js","components/common/logo/Logo.jsx","App.jsx","serviceWorker.js","index.js"],"names":["textArea","copy","Logo","id","className","Component","prefixer","code","selectText","range","selection","navigator","userAgent","match","document","createRange","selectNodeContents","window","getSelection","removeAllRanges","addRange","setSelectionRange","select","text","createElement","value","body","appendChild","createTextArea","execCommand","removeChild","App","state","connectionBtnDisabled","createMode","mode","createCode","joinCode","connectedCode","connected","infoData","textToSend","fileToSend","response","loading","activeOldData","setTimeoutAlerterGlobal","isAlerterActiveGlobal","iconHash","domain","socket","io","oldData","allData","localStorage","getItem","Object","values","JSON","parse","reverse","util","activeOldDataIndex","incActiveOldData","splice","setState","alerter","type","msg","icon","timer","lTimer","console","error","alerterDiv","getElementById","clearTimeout","innerHTML","style","display","setTimeout","preCopy","alert","toggleMode","e","force","setItem","codeGenerator","result","characters","charactersLength","length","i","charAt","Math","floor","random","handleUpload","file","target","files","fileReader","FileReader","readAsArrayBuffer","onload","evt","arrayBuffer","name","size","data","inputUpdate","sender","isFile","confirm","emit","clearLs","prevColor","this","urlParams","URLSearchParams","location","search","has","get","on","reload","isJoin","stringify","alt","src","onClick","hostname","map","res","index","key","href","rel","ext","date","Date","toLocaleString","connect","disabled","placeholder","onChange","htmlFor","index2","index3","Number","Boolean","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c147781.chunk.js","sourcesContent":["const prefixer = code => '____sharedrop__' + code;\r\nexport function setData(code, data) {\r\n    let allData = localStorage.getItem(prefixer(''));\r\n\r\n    if (allData) {\r\n        allData = JSON.parse(allData);\r\n        allData[code] = { code, response: data }\r\n    } else {\r\n        allData = { [code]: { code, response: data } }\r\n\r\n    }\r\n\r\n    localStorage.setItem(prefixer(''), JSON.stringify(allData));\r\n\r\n\r\n}\r\n\r\nexport function getData() {\r\n    let allData = localStorage.getItem(prefixer(''));\r\n\r\n    if (allData) {\r\n        return Object.values(JSON.parse(allData)).reverse();\r\n    } else {\r\n        return [];\r\n    }\r\n\r\n}\r\nexport function clear() {\r\n    localStorage.setItem(prefixer(''), '{}');\r\n}\r\n\r\n\r\n\r\nvar textArea;\r\nexport let copy;\r\n\r\nfunction isOS() {\r\n    return navigator.userAgent.match(/ipad|iphone/i);\r\n}\r\n\r\nfunction createTextArea(text) {\r\n\r\n    textArea = document.createElement('textArea');\r\n    textArea.value = text;\r\n    document.body.appendChild(textArea);\r\n}\r\n\r\nfunction selectText() {\r\n    var range,\r\n        selection;\r\n\r\n    if (isOS()) {\r\n        range = document.createRange();\r\n        range.selectNodeContents(textArea);\r\n        selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n        textArea.setSelectionRange(0, 999999);\r\n    } else {\r\n        textArea.select();\r\n    }\r\n}\r\n\r\nfunction copyToClipboard() {\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\ncopy = function (text) {\r\n    createTextArea(text);\r\n    selectText();\r\n    copyToClipboard();\r\n};\r\n    //       navigator.clipboard.writeText(text);\r\n\r\n\r\n\r\n//  clear{ setData, getData, clear, copy}","import React, { Component } from 'react';\r\n\r\n\r\nexport default class Logo extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <span id=\"Logo\" className=\"font-weight-bold\">\r\n                <span className=\"text-primary\">share</span>\r\n                <span className=\"text-secondary\">drop</span>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n","\nimport React, { Component } from 'react';\nimport Logo from './components/common/logo/Logo'\n\nimport io from 'socket.io-client';\nimport './App.scss';\n\nimport * as util from './data.service.js';\n\nclass App extends Component {\n  state = {\n    connectionBtnDisabled: false,\n    createMode: true,\n    mode: 'light',\n    createCode: '',\n    joinCode: '',\n    connectedCode: '',\n\n    connected: false,\n    infoData: {},\n    textToSend: '',\n    fileToSend: null,\n    response: [],\n    loading: false,\n    activeOldData : []\n\n  }\n\n  // alerter\n  setTimeoutAlerterGlobal = null\n  isAlerterActiveGlobal = false\n  iconHash = {\n    'svg': 'fa fa-image mr-2',\n    'jpg': 'fa fa-image mr-2',\n    'jpeg': 'fa fa-image mr-2',\n    'png': 'fa fa-image mr-2'\n  }\n  domain = '/' // 'http://localhost:8080/'\n  socket = io(this.domain);\n  oldData = util.getData();\n  activeOldDataIndex = 0;\n\nincActiveOldData = () => {\n  let activeOldData = [...this.oldData]; \n\n  activeOldData = activeOldData.splice(0, this.activeOldDataIndex + 1)\nthis.setState({activeOldData})\n\n  this.activeOldDataIndex = this.activeOldDataIndex + 1\n}\n\n\n  alerter = (type, msg, icon, timer) => {\n    let lTimer = 4000;\n    if (timer) {\n      lTimer = timer;\n    }\n    if (!type) {\n      throw console.error('No type in alert');\n\n    }\n    const alerterDiv = document.getElementById('alerter');\n    if (!alerterDiv) {\n      return;\n    }\n    if (!this.isAlerterActiveGlobal) {\n      alerterDiv.innerHTML = `\n                        <div class=\"alert alert-${type} animated fadeInDown squared\">\n                        <i class=\"fa ${icon} mr-2\"></i>\n                                ${msg === '' ? \"<i class='fa fa-check-circle'>  </i>\" : msg}\n                        </div>\n                        `;\n      alerterDiv.style.display = 'inline-block';\n      this.isAlerterActiveGlobal = true;\n\n      this.setTimeoutAlerterGlobal = setTimeout(() => {\n        this.isAlerterActiveGlobal = false;\n        alerterDiv.style.display = 'none';\n      }, lTimer)\n    } else {\n      this.isAlerterActiveGlobal = false;\n      clearTimeout(this.setTimeoutAlerterGlobal)\n      this.alerter(type, msg);\n\n    }\n\n\n  }\n\n\n\n\n\n  // copy to clipboard\n\n  preCopy = (text, alert) => {\n\n    if (text) {\n      util.copy(text)\n      if (alert) {\n        this.alerter('success', 'Copied  to clipboard <br>' + alert, 'fa-check', 10000);\n        return;\n      }\n      this.alerter('success', 'Copied  to clipboard', 'fa-check');\n      return;\n    }\n  }\n\n\n\n\n  toggleMode = (e, force) => {\n    if (force) {\n      this.setState({ mode: force })\n      return\n    }\n    const mode = this.state.mode === 'light' ? 'dark' : 'light'\n\n    localStorage.setItem('___color', mode)\n\n\n    this.setState({ mode })\n\n\n  }\n  componentDidMount() {\n    const prevColor = localStorage.getItem('___color');\n\n    if (prevColor) {\n      this.toggleMode(null, prevColor);\n    }\n    // check for query params\n    const urlParams = new URLSearchParams(window.location.search)\n\n    if (urlParams.has('code')) {\n      this.setState({ createMode: false, joinCode: urlParams.get('code') })\n\n    }\n\n    this.codeGenerator();\n\n    this.socket.on('connect', function () {\n    });\n    this.socket.on('disconnect', function () {\n      window.location.reload()\n    });\n    this.incActiveOldData();\n  }\n  codeGenerator = () => {\n    const length = 5;\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n\n    this.setState({ createCode: result })\n\n  }\n  handleUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) {\n      return\n    }\n\n\n    var fileReader = new FileReader();\n\n    fileReader.readAsArrayBuffer(file);\n    fileReader.onload = (evt) => {\n      var arrayBuffer = fileReader.result;\n\n      const fileToSend = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        data: arrayBuffer\n\n\n\n      }\n\n\n      this.setState({ fileToSend });\n\n\n    }\n\n\n\n\n\n\n  }\n  inputUpdate = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  connect(code, isJoin) {\n    this.setState({connectionBtnDisabled: true})\n\n    this.socket.emit('create', { code, isJoin })\n    this.socket.on('sync', (data) => {\n      if (data) {\n\n        const connectedCode = isJoin ? this.state.joinCode : this.state.createCode\n        this.setState({ connected: true, connectedCode });\n\n\n      }\n    })\n    this.socket.on('info', (data) => {\n      if (data) {\n\n        this.setState({ infoData: data });\n      }\n    })\n    this.socket.on('upload error', (data) => {\n      if (data) {\n        alert('error');\n      }\n    })\n    this.socket.on('404', (data) => {\n      if (data) {\n        alert('not found')\n        this.setState({ connected: false, connectionBtnDisabled: false  });\n      }\n    })\n\n    this.socket.on('message', (data) => {\n      if (data) {\n        if (data.isFile) {\n          this.setState({ loading: false });\n        }\n\n        this.setState({ response: [...this.state.response, data] });\n        util.setData(this.state.connectedCode, this.state.response)\n      }\n    })\n  }\n  sender = () => {\n\n    if (this.state.infoData.length < 2) {\n      const proceed = window.confirm('This is the only device connected, are you sure you want to send this file')\n      if (!proceed) {\n        return\n      }\n    }\n    let isFile;\n\n    if (this.state.fileToSend) {\n      isFile = true;\n      this.setState({ loading: true });\n    }\n\n    const data = { file: this.state.fileToSend, text: this.state.textToSend, code: this.state.connectedCode, isFile }\n    this.socket.emit('message', data);\n\n\n    this.setState({ textToSend: '', fileToSend: null })\n  }\n  clearLs = () => {\n    util.clear();\n    this.oldData = null;\n  }\n  render() {\n\n\n    return (\n      <div className={this.state.mode}>\n        {\n          this.state.loading ?\n\n            <div className=\"loading\">\n              <img alt=\"loader\" src=\"/assets/loader.svg\" />\n            </div>\n            : ''\n\n        }\n        <div className=\"container main-body\">\n          <div id=\"alerter\" className=\"rounded\">\n\n          </div>\n          <div className=\"navbar\">\n            <h3><i className=\"fab fa-cloudsmith text-primary mr-1\"></i>   <Logo />\n\n\n\n\n            </h3>\n            <span onClick={this.toggleMode}>\n              {this.state.connected ?\n                <span className=\"fa fa-check-circle mr-2 text-success\"></span>\n                :\n                <span className=\"fa fa-times-circle mr-2 text-danger\"></span>\n              }\n              {this.state.mode === 'light' ? <i className=\"fa fa-moon\"></i> : <i className=\"fa fa-sun text-white\"></i>}\n\n\n            </span>\n\n          </div>\n          Share files across your devices, no sign up no login. just share! Just like  AirDrop\n<br></br>\n\n          {/** sent or recieved files stays here */}\n\n\n\n\n          <br></br>\n          {/** share mode */}\n          {!this.state.connected ?\n            <div onClick={() => this.setState({ createMode: !this.state.createMode })} className=\"row\">\n              <div className=\"col-6 cursor\">\n\n                <div className={this.state.createMode ? 'bg-primary text-white rounded p-2 text-center ' : 'rounded p-2 text-center'}>\n                  <h3>\n\n                    Create</h3>\n\n\n                </div>\n\n              </div>\n              <div className=\"col-6 cursor\">\n\n                <div className={!this.state.createMode ? 'bg-primary text-white rounded p-2 text-center ' : 'rounded p-2 text-center'}>\n\n                  <h3>Join</h3>\n\n\n                </div>\n\n              </div>\n            </div>\n            :\n            <div className=\"border mb-3 p-2 border-secondary rounded\">\n              <div className=\"text-right\">\n\n                <button onClick={() => this.socket.emit('disconnect')} className=\"btn btn-sm btn-danger\"><i className=\"fa fa-times mr-2\"></i>Exit connection</button>\n              </div>\n              <br></br>\n              <div className=\"border rounded p-2\">\n                Connected to <code>{this.state.connectedCode}</code>\n                <br></br>\n                <div className=\"btn-group mb-1\">\n                  <button onClick={() => this.preCopy(this.state.connectedCode)} className=\"btn btn-sm btn-primary\">\n                    <i className=\"fa fa-copy mr-1\"></i>\n                    Copy</button>\n                  <button onClick={() => this.preCopy(window.location.hostname + '?code=' + this.state.connectedCode, 'Share this link so other devices can automatically join')} className=\"btn btn-sm btn-outline-primary\">\n                    <i className=\"fa fa-share mr-1\"></i>Share</button>\n                </div>\n                <br />\n                Connected devices: {this.state.infoData.length}\n                <br />\n                {this.state.infoData.length < 2 ?\n                  <small className=\"text-info\">Please connect another device, Only you is recieving these files</small>\n                  : ''\n                }\n\n              </div>\n              <br></br>\n              Files you share will appear here\n              <br></br>\n              {this.state.response.map((res, index) => {\n\n                return <div key={index} className=\"border rounded p-2 mt-3\">\n                  {\n                    !res.isFile ?\n                      <div>\n                        {res.text}\n                        <br></br>\n                        <small className=\"d-block text-muted text-right\">\n                          <button onClick={() => this.preCopy(res.text)} className=\"btn btn-sm btn-primary mr-2\">\n                            <i className=\"fa fa-copy mr-1\"></i>\n                            Copy</button>\n                          <i className=\"far fa-sticky-note mr-1\"></i>\n                          Note\n                          {res.date ? <span className=\"ml-1 date\">{new Date(res.date).toLocaleString()}</span> : ''}\n                        </small>\n                      </div>\n                      :\n                      <div>\n                        {res.file.name}\n                        <br></br>\n                        {res.text}\n\n                        <small className=\"d-block text-muted text-right\">\n\n                          <a href={\"/api/get/\" + res.file.data} target='_blank' rel=\"noopener noreferrer\">\n                            <i className=\"fa fa-cloud-download-alt fa-big mr-1 text-secondary\"></i>\n                          </a>\n                          <button onClick={() => this.preCopy(window.location.hostname + \"/api/get/\" + res.file.data)} className=\"btn btn-sm btn-primary mr-2\">\n                            <i className=\"fa fa-copy mr-1\"></i>\n                            Copy</button>\n\n\n\n                          <i className={this.iconHash[res.file.ext]}> </i>\n                          {res.file.ext}\n                          {res.date ? <span className=\"ml-1 date\">{new Date(res.date).toLocaleString()}</span> : ''}\n                        </small>\n\n                      </div>\n\n\n                  }\n\n\n                </div>\n\n              })\n\n              }\n            </div>\n          }\n\n          <br></br>\n\n          <div className=\"row \">\n            <div className=\"col-md-6\">\n              {!this.state.connected ?\n                <div>\n                  {this.state.createMode ?\n                    <div>\n                      <small className=\"text-warning\">Your create code</small>\n\n                      <h1 ><code><b>{this.state.createCode}</b></code></h1>\n\n                      <div className=\"btn-group mb-1\">\n                        <button onClick={() => this.preCopy(this.state.createCode)} className=\"btn btn-sm btn-primary\">\n                          <i className=\"fa fa-copy mr-1\"></i>\n                          Copy</button>\n                        <button onClick={() => this.preCopy(window.location.hostname + '?code=' + this.state.createCode, 'Share this link so other devices can automatically join')} className=\"btn btn-sm btn-outline-primary\">\n                          <i className=\"fa fa-share mr-1\"></i>Share</button>\n                      </div>\n                      <br></br>\n                      <br></br>\n\n                      <button onClick={() => this.connect(this.state.createCode)} className=\"btn btn-outline-primary btn-block\" disabled={!this.state.connectionBtnDisabled ? false : true} type=\"button\">Create Connection</button>\n\n\n                    </div>\n                    :\n                    <div>\n                      <small className=\"text-warning\">Enter Your join code</small>\n                      <br></br>\n\n                      <input className=\"form-control\" placeholder=\"Enter your join code \" onChange={this.inputUpdate} name=\"joinCode\" value={this.state.joinCode} />\n\n                      <br></br>\n\n                      <button onClick={() => this.connect(this.state.joinCode, true)} className=\"btn btn-outline-primary btn-block\" disabled={this.state.joinCode === '' || this.state.connectionBtnDisabled  ? true : false}  type=\"button\">Join Connection</button>\n\n                    </div>\n\n\n\n                  }\n                </div>\n                :\n\n                ''}\n              {/**\n              when connected\n              \n              \n              */\n                this.state.connected ?\n                  <div className=\"border rounded p-2\">\n\n\n                    Upload File\n{this.state.fileToSend ?\n                      <div>\n                        <div className=\"text-right p-2\">\n                          <i onClick={() => this.setState({ fileToSend: null })} className=\"fa cursor fa-times text-danger\"></i>\n                        </div>\n                        Name: {this.state.fileToSend.name},\n<br></br>\n                        Size: {this.state.fileToSend.size / 1024} kb,\n</div>\n\n\n                      : ''}\n\n                    <br></br>\n                    <div className=\"text-center\">\n                      <br></br>\n                      <label htmlFor=\"fileinput\" className=\"cursor d-block p-5\"> <i className=\"fa fa-cloud-upload-alt fa-big\"></i></label>\n                      <input id=\"fileinput\" type=\"file\" onChange={this.handleUpload} className=\"form-control d-none\" />\n\n                      <small>Files are only available on our servers for 10 Munites, after which they will be deleted</small>\n                    </div>\n                    <hr />\n\n                    Send Text\n\n                    <textarea onChange={this.inputUpdate} name=\"textToSend\" className=\"form-control \" value={this.state.textToSend}></textarea>\n                    <br />\n                    <button onClick={this.sender} className=\"btn btn-primary btn-block\">Send</button>\n\n                  </div>\n                  : ''\n              }\n\n\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"\">\n                <span className=\"underline\">How to use</span>\n                <br></br>\n                <ol>\n                  <li> If you do not have an existing connection, Create a connection. If you have a connection, click join and enter the create code</li>\n                  <li> When you care connected, you will be able to see the number of devices in your network </li>\n                  <li> You can send / recieve texts or files instantly </li>\n                  <li> To leave the connection, click Exit connection </li>\n                </ol>\n                <br />\n                <span className=\"text-info\">On Iphones, You might be restricted to downloading just media files, due to ios  limitations, </span>\n\n                <br></br>\n\n                <span className=\"underline\">Tips</span>\n                <br></br>\n                <ul>\n                  <li> You can always connect back to the same connection so far there is atleast one device active. Connection only deletes when all devices have left, in this case, you will have to create a new connection</li>\n\n                </ul>\n\n              </div>\n            </div>\n\n          </div>\n          <hr className=\"text-secondary\" />\n          {\n            this.state.activeOldData && this.state.activeOldData.length ?\n              <div className=\"border border-secondary  rounded\">\n                <div className=\"bg-secondary p-3\">\n                  <div className=\"row \">\n                    <div className=\"col-9 col-md-6\">              <h3>\n                      Old Data\n              </h3>\n                      <small>We use your local storage to keep track of your old data</small>\n                    </div>\n                    <div onClick={() => this.clearLs()} className=\"col-3 col-md-6 text-right\"><button onClick={() => this.socket.emit('disconnect')} className=\"btn btn-sm btn-info\"><i className=\"fab fa-cloudscale mr-2\"></i>Clear</button></div>\n\n                  </div>\n                </div>\n                <br />\n\n\n                <div className=\"p-3\">\n                  {this.state.activeOldData.map((code, index2) => {\n\n                    return (\n                      <div key={index2} className=\"mt-2\">\n                        <h4>{code.code}</h4>\n                        <div className=\"border rounded p-2 mt-3\">\n\n                          {code.response.map((res, index3) => {\n\n                            return (<div key={index3}>\n                              {\n                                !res.isFile ?\n                                  <div>\n                                    {res.text}\n                                    <br></br>\n                                    <small className=\"d-block text-muted text-right\">\n                                      <button onClick={() => this.preCopy(res.text)} className=\"btn btn-sm btn-primary mr-2\">\n                                        <i className=\"fa fa-copy mr-1\"></i>\n                                        Copy</button>\n                                      <i className=\"far fa-sticky-note mr-1\"></i>\n                                      Note\n                                       {res.date ? <span className=\"ml-1 date\">{new Date(res.date).toLocaleString()}</span> : ''}\n                                    </small>\n                                  </div>\n                                  :\n                                  <div>\n                                    {res.file.name}\n                                    <br></br>\n                                    {res.text}\n\n                                   \n                                  \n                                    <small className=\"d-block text-muted text-right\">\n\n                                      {res.date && Number(new Date() - Number(new Date(res.date)) <= 600000  ) ?\n                                        <span>\n                                      <a href={\"/api/get/\" + res.file.data} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <i className=\"fa fa-cloud-download-alt fa-big mr-1 text-secondary\"></i>\n                                      </a>\n                                      <button onClick={() => this.preCopy(window.location.hostname + \"/api/get/\" + res.file.data)} className=\"btn btn-sm btn-primary mr-2\">\n                                        <i className=\"fa fa-copy mr-1\"></i>\n                                        Copy</button>\n                                        </span>\n\n:\n'file expired'\n                                    }\n\n                                      <i className={this.iconHash[res.file.ext]}> </i>\n                                      {res.file.ext}\n                                      {res.date ? <span className=\"ml-1 date\">{new Date(res.date).toLocaleString()}</span> : ''}\n                                    </small>\n                                    <hr />\n                                  </div>\n\n\n                              }\n                            </div>)\n\n                          })}\n\n\n                        </div>\n                      </div>)\n\n                  })\n\n                  }\n<br />\n                  {this.activeOldDataIndex < this.oldData.length ? <button onClick={this.incActiveOldData} className=\"btn btn-sm btn-primary\">Load more</button>: ''}\n                </div>\n\n\n\n\n\n\n              </div>\n              : ''\n\n          }\n\n\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n\n\n\n\n        </div>\n        <footer className={this.state.mode === 'light' ? \"text-center p-3 bg-white\" : 'text-center p-3 bg-cus-dark'}>\n\n          Made with <i className=\"fa fa-heart text-danger\"></i> by <a href=\"http://ayotycoon.github.io/\">Sunmola Ayokunle</a> | <a href=\"https://twitter.com/ayotycoon\"><i className=\"fab fa-twitter mr-1 ml-1 \"></i></a>  | <span >Help Ayokunle find a job! <i className=\"far fa-smile-wink\"></i> | <a href=\"https://cvngayotycoon.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Generate your CV</a></span>\n        </footer>\n\n\n\n\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}